:: args
::   0.1 : string delimiter
::   0.2 : input string
:: return
::   0.1 : splitted length
::   0.3 and following: splitted parts

:: delimiter
#1 <= ^0 => 1
#2 <= 3
#3 <=

!1
^0 => #2 <=
#4 <=

!2
#5 <= ^0 => 2 => #3

:: if is 0
#0 <= #0 + (1 - #5 / #5) * 10

:: if is delimiter
#6 <= #5 - #1
#0 <= #0 + (1 - #6 / #6) * 4

:: else append to current string
^0 => #2 => #4 <= #5
#3 <= #3 + 1
#4 <= #4 + 1
#0 <= !2

:: delimiter OwO
^0 => #2 => #4 <= 0
#2 <= #2 + 1
#3 <= #3 + 1
#0 <= !1

::exit
^0 => #2 => #4 <= 0
^0 => 1 <= #2 - 2
